[{"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\index.js":"1","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\App.js":"2","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\Login.js":"4","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\Hooks\\localStorage.js":"5","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\Dashboard.js":"6","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\SideBar.js":"7","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\Conversation.js":"8","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\Contacts.js":"9","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\ContactModal.js":"10","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\ConversationModal.js":"11","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\Contexts\\ContactsProvider.js":"12","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\Contexts\\ConversationsProvider.js":"13","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\ConversationArea.js":"14","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\Contexts\\SocketProvider.js":"15"},{"size":245,"mtime":1607130846122,"results":"16","hashOfConfig":"17"},{"size":776,"mtime":1607807650274,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":953,"mtime":1607132209884,"results":"20","hashOfConfig":"17"},{"size":1359,"mtime":1607173291646,"results":"21","hashOfConfig":"17"},{"size":469,"mtime":1607265214091,"results":"22","hashOfConfig":"17"},{"size":2304,"mtime":1607175773331,"results":"23","hashOfConfig":"17"},{"size":734,"mtime":1607474006418,"results":"24","hashOfConfig":"17"},{"size":518,"mtime":1607253422764,"results":"25","hashOfConfig":"17"},{"size":1513,"mtime":1607180050982,"results":"26","hashOfConfig":"17"},{"size":2019,"mtime":1607261454654,"results":"27","hashOfConfig":"17"},{"size":772,"mtime":1607180527363,"results":"28","hashOfConfig":"17"},{"size":4363,"mtime":1607808913631,"results":"29","hashOfConfig":"17"},{"size":2959,"mtime":1607779322247,"results":"30","hashOfConfig":"17"},{"size":727,"mtime":1607809480375,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"mirx06",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\index.js",[],["65","66"],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\App.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\Login.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\Hooks\\localStorage.js",["67"],"import React,{useEffect,useState} from 'react'\r\n\r\n\r\nconst PREFIX=\"message-socket-\"\r\n\r\n// KEY, init= default value\r\nexport default function LocalStorage(key,init) {\r\n    // Montar a minha chave\r\n    const prefixed=PREFIX+key\r\n\r\n    const [value,setValue]=useState(()=>{\r\n        \r\n        const jsonV=localStorage.getItem(prefixed)\r\n        // SE EXISTIR UMA VALOR NO LOCALSTORAGE IRÁ ADICIOAR AO VALUE\r\n        // O VALOR DO LOCALSTORAGE\r\n        if(jsonV !== null)return JSON.parse(jsonV)\r\n        \r\n        // CASO NÃO EXISTA, IRÁ VERIFICAR SE O SEGUNDO PARÂMETRO É UMA FUNÇÃO\r\n        // PARA PODER RETORNAR AO VALUE O VALOR QUE ESSA FUNÇÃO RETORNA\r\n        if(typeof init === 'function'){\r\n            return init()\r\n        }\r\n        // CASO NÃO FOR UMA FUNÇÃO ENTÃO IRÁ RETORNAR O VALOR QUE ESTÁ DEFINIDO\r\n        else{\r\n            return init\r\n        }\r\n    })\r\n    // SEMPRE QUE USAR O \"setID\" o useEffect IRÁ SER ACIONADO, IRÁ ADICIONAR\r\n    // AO LOCALSTORAGE O VALOR QUE ESTOU DEFININDO.\r\n    useEffect(()=>{\r\n        localStorage.setItem(prefixed,JSON.stringify(value))\r\n    },[prefixed,value])\r\n    \r\n    // QUANDO USAR ESSA FUNÇÃO EM ALGUM LOCAL, IRÁ PASSAR O value E O setValue\r\n    // PARA O COMPONENTE. COM ISSO SEMPRE QUE USAR O SET PARA ALTERAR O VALUE IRÁ CAIR\r\n    // NO useEffect\r\n    return [value,setValue]\r\n}\r\n","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\Dashboard.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\SideBar.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\Conversation.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\Contacts.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\ContactModal.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\ConversationModal.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\Contexts\\ContactsProvider.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\Contexts\\ConversationsProvider.js",[],"C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\components\\ConversationArea.js",["68","69","70"],"import { useState, useRef, useEffect, useCallback } from 'react'\r\nimport { Form, InputGroup, Button } from 'react-bootstrap'\r\nimport { useConversations } from '../Contexts/ConversationsProvider'\r\n\r\nexport default function ConversationArea() {\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const { sendMessage, SelectedConversation } = useConversations()\r\n\r\n    const lastMessageRef = useRef()\r\n    \r\n    const setRef=useCallback(node=>{\r\n        if(node){\r\n            node.scrollIntoView({smooth:true})\r\n        }\r\n    },[])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        sendMessage(SelectedConversation.recipients.map(r => r.id), text)\r\n        setText('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column flex-grow-1\">\r\n            <div className=\"flex-grow-1 overflow-auto\">\r\n                <div\r\n                    className=\"d-flex \r\n                    flex-column align-itens-start \r\n                    justify-content-end px-3\">\r\n\r\n                    {SelectedConversation.messages.map((message, i) => {\r\n                        // True se o map chegar na última mensagem\r\n                        const lastMessage=SelectedConversation.messages.length - 1 === i\r\n                        return (\r\n                            <div\r\n                                className=\"my-1 d-flex flex-column\"\r\n                                key={i}\r\n                                ref={lastMessage ? setRef : null}\r\n                                className={message.fromMe ? 'align-self-end' : ''}\r\n                            >\r\n                                <div\r\n                                    className={`rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`}\r\n                                >\r\n                                    {message.text}\r\n                                </div>\r\n\r\n                                <div className={`text-muted small ${message.fromMe ? 'text-right' : ''}`}>{message.fromMe ? 'Você' : message.sendName}</div>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"m-2\">\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            required\r\n                            value={text}\r\n                            onChange={(e) => setText(e.target.value)}\r\n                            style={{ height: '75px', resize: 'none' }}\r\n                            title=\"Escreva uma mensagem\"\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <Button type=\"submit\">Enviar</Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Davis\\Documents\\Programação\\Projetos\\React\\ChatMessage\\frontend\\src\\Contexts\\SocketProvider.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"79","line":1,"column":28,"nodeType":"77","messageId":"78","endLine":1,"endColumn":37},{"ruleId":"75","severity":1,"message":"80","line":11,"column":11,"nodeType":"77","messageId":"78","endLine":11,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":43,"column":33,"nodeType":"83","endLine":43,"endColumn":83},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'lastMessageRef' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]